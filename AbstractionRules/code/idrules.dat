data;
# element = vertex or edge of the graph
param nvertices 	 := 5;
param nedges         := 5;
param N         	 := 3;
set ELEMENTS     := 1 2 3 4 5 6 7 8 9 10;
set RULES        := R1 R2;
set SUBGRAPHS    := S1 S2 S3 S4 S5 S6 S7 S8 S9 ;
set TIME0        := 0 1 2 3;
set TIME 		 := 1 2 3;
set ZERO         := 0;

# R1 deletes an edge, and applies to simple 2-line graph vev'
# R2 merges two vertices together, and applies to 3-linear graphs

# The initial values of vertex parameters
# Here I show only one parameter per element
param Px0 :=
    1  500
    2 500
    3 500
    4 500
    5 500
    6 400
    7 400
    8 400
    9 400
    10 400;

# Terms for the linear predicate Phi
param C := R1 600   R2 600;
param B : 
       1   2  3  4  5  6  7  8  9  10 :=
 R1    1   1  1  1  1  1  1  1  1  1
 R2    1   1  1  1  1  1  1  1  1  1;

# Preserved elements
# An element is identified by a unique integer (basically, 
# we just count the element in the graoh G)
set VPHI := 1 4 9;
# Element list of induced subgraphs. 
# (s,x) means x (given by its identity in G) is in subgraph Ks	
set KX := 
	(S1,*) 1 3 6
	(S2,*) 2 3 7
	(S3,*) 3 4 8 
	(S4,*) 1 4 9
	(S5,*) 4 5 10
	(S6,*) 1 3 4 6 8
	(S7,*) 1 4 5 9 10
	(S8,*) 2 3 4 7 8
	(S9,*) 3 4 5 8 10 ;
	
# (R,Ks) in KRULES means that subgraph Ks is a stage for R
set KRULES := 
	(R1,*) S1 S2 S3 S4 S5
	(R2,*) S6 S7 ;      #8 9;
	
# DESTROYED[i,s] are the Stages destroyed by application of R_i to ssubgraph s
set DESTROYED[R1,S1] := S1 S6;
set DESTROYED[R1,S2] := S2 S8;
set DESTROYED[R1,S3] := S3 S8 S9;
set DESTROYED[R1,S4] := S4 S7;
set DESTROYED[R1,S5] := S5 S7 S9;
set DESTROYED[R2,S6] := S6 S1 S4 S7 ;
set DESTROYED[R2,S7] := S7 S1 S4 S6 ;

# Abstractness for every rule
# 
# deltaRS gives how many elements are removed by application of a rule
param deltaRS := R1 1 R2 2; 

